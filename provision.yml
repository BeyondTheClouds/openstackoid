#   ____                ______           __        _    __
#  / __ \___  ___ ___  / __/ /____ _____/ /_____  (_)__/ /
# / /_/ / _ \/ -_) _ \_\ \/ __/ _ `/ __/  '_/ _ \/ / _  /
# \____/ .__/\__/_//_/___/\__/\_,_/\__/_/\_\\___/_/\_,_/
#     /_/
# Make your OpenStack Collaborative
#

---
- hosts: all
  tasks:
  - name: Install the bare necessities (apt)
    apt:
      name: "{{item}}"
      update_cache: yes
    with_items:
      - git
      - silversearcher-ag
      - sudo
      - vim
    become: true

  - name: Install the bare necessities (pip)
    pip:
      name: "{{item}}"
    with_items:
      - ipython
      - ipdb
      - tox
      - virtualenv
    become: true

# ---------------------------------------------------------------- Devstack
  - name: Add stack user
    user:
      name: stack
      shell: /bin/bash
      home: /opt/stack
      system: yes
      groups: adm,sudo,systemd-journal
    become: true

  - name: Make stack user a sudoer
    lineinfile:
      dest: /etc/sudoers.d/stack
      line: "stack ALL=(ALL) NOPASSWD: ALL"
      create: yes
    become: true

  - name: Always connect as stack user
    blockinfile:
      name: ~/.bashrc
      state: present
      block: |
        sudo su stack

  - name: Source OS env at stack connection
    blockinfile:
      name: ~/.bashrc
      state: present
      block: |
        . /opt/stack/devstack/openrc admin admin
        cd ~
    become: true
    become_user: stack

  - name: Clone Devstack in /opt/stack/devstack
    git:
      repo: https://git.openstack.org/openstack-dev/devstack
      version: stable/rocky
      dest: /opt/stack/devstack
      force: yes
      update: no
      depth: 1
    become: true
    become_user: stack

  # - name: Patching devstack (host-ip)
  #   shell: "sed -i 's/HOST_IP=${HOST_IP:-}/ HOST_IP=10.0.2.15/' /opt/stack/devstack/stackrc"
  #   become: true
  #   become_user: stack

  - name: Create the devstack local.conf
    blockinfile:
      path: /opt/stack/devstack/local.conf
      marker: "# {mark} MINIMAL DEVSTACK"
      create: yes
      block: |
        [[local|localrc]]
        ADMIN_PASSWORD=admin
        DATABASE_PASSWORD=$ADMIN_PASSWORD
        RABBIT_PASSWORD=$ADMIN_PASSWORD
        SERVICE_PASSWORD=$ADMIN_PASSWORD
        LIBVIRT_TYPE=qemu
        REGION_NAME={{ os_name }}
        HOST_IP={{ os_ip }}
        SERVICE_HOST=10.0.2.15
        # HOST_IP=10.0.2.15

        LIBS_FROM_GIT=oslo.db
        OSLODB_REPO=https://github.com/BeyondTheClouds/oslo.db
        OSLODB_BRANCH=cockroachdb/pike

        # Note: Find services in $ENABLED_SERVICES
        disable_service c-api
        disable_service c-sch
        disable_service c-vol
        disable_service horizon
        disable_service tempest

        # enable_plugin rally https://github.com/openstack/rally master

        #enable_plugin osprofiler https://github.com/openstack/osprofiler stable/rocky
        #OSPROFILER_COLLECTOR=redis

        # [[post-config|$NOVA_CONF]]
        # [profiler]
        # hide_result=False

        [[post-config|$KEYSTONE_CONF]]
        # Disable cache in keystone to force the creation of a token
        # at every request.
        [cache]
        enabled = False
    become: true
    become_user: stack

  # Workaround to
  # E: Package 'libmysqlclient-dev' has no installation candidate
  # - name: Get MySQL sources
  #   get_url:
  #     url: "https://repo.mysql.com/mysql-apt-config_0.8.9-1_all.deb"
  #     dest: /tmp/my-sql-apt-config.deb
  #
  # - name: Install MySQL sources
  #   shell: DEBIAN_FRONTEND=noninteractive dpkg -i /tmp/my-sql-apt-config.deb
  #   become: true

# ---------------------------------------------------------------- Better log
  - name: Write log on the disk and make them persistent
    blockinfile:
      path: /etc/systemd/journald.conf
      create: yes
      block: |
        # Store on the disk
        Storage=persistent
        # Do not split journalfd
        SplitMode=none
        # Do not drop log message
        RateLimitInterval=0
        # Do not drop log message
        RateLimitBurst=0
        SystemMaxUse=4G
        RuntimeMaxUse=4G
    become: true

# ---------------------------------------------------------------- Run boy run!
  - name: Clear Devstack
    shell: /opt/stack/devstack/unstack.sh  &> /tmp/stack-logs
    args:
      executable: /bin/bash
    become: true
    become_user: stack
    # Playbook fails on the first run because HOST_IP and SERVICE_HOST
    # are not yet setted by the start of devstack
    ignore_errors: yes

  - name: Start of Devstack deployment
    debug:
      msg:
        - "Follow deployment with:"
        - "vagrant ssh -- tail -f /tmp/stack-logs"

  - name: Run Devstack
    shell: /opt/stack/devstack/stack.sh &> /tmp/stack-logs
    args:
      executable: /bin/bash
    become: true
    become_user: stack

# ---------------------------------------------------------- Scope Interpretation
  - name: Install patched OpenStack-CLI and Keystone-middleware that interprets the scope
    pip:
      name: "{{item}}"
      editable: true
    with_items:
      - git+https://github.com/Beyondtheclouds/python-openstackclient.git@stable/queens#egg=python-openstackclient
      # - TODO: git+https://github.com/Beyondtheclouds/keystonemiddleware.git@stabe/rocky#egg=keystonemiddleware
    become: true


  # TODO:
  # - name: Install and configure haproxy

  # TODO:
  # - name: Change config of systemd to tells devstack@*.service to go through HAProxy

  # - name: Force systemd to reread configs
  #   systemd:
  #     daemon_reload: yes

  # TODO:
  # -name: Restart devstack@*.service
